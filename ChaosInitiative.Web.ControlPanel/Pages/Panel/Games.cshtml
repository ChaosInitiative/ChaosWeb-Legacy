@page
@using ChaosInitiative.Web.ControlPanel.Model
@model ChaosInitiative.Web.ControlPanel.Pages.Panel.GamesModel

@{
    ViewData["Title"] = "Games";
    Layout = "Shared/_LayoutDashboard";
}

<section>
    
    <h1>Games</h1>
    
    <div class="accordion" id="gamesAccordion">
        
        @{
            int i = 0; // Super janky way of getting the index of a foreach loop...
            foreach (Game game in Model.Games)
            {
                <div class="card">
                    
                    <!-- Accordion head -->
                    <div class="card-header" id="game_heading_0">
                        <h2 class="mb-0">
                            <button class="btn btn-link btn-block text-left"
                                    type="button"
                                    data-toggle="collapse"
                                    data-target="#game_collapse_@i">
                                @game.Name
                            </button>
                        </h2>
                    </div>

                    <!-- Accordion content -->
                    <div class="collapse pt-3 pb-4" 
                         id="game_collapse_@i"
                         aria-labelledby="game_heading_0"
                         data-parent="#gamesAccordion">

                        <form asp-controller="Game" asp-action="OnPut">
                            <input class="d-none" type="hidden" name="Id" value="@i">
                            
                            <div class="form-group">
                                <label for="game_form_name_@i" class="is-required">Name</label>
                                <input class="form-control" 
                                       type="text" 
                                       id="game_form_name_@i" 
                                       placeholder="Name" 
                                       name="Name" 
                                       value="@game.Name" 
                                       aria-describedby="game_form_name_invalid_feedback_@i"
                                       required/>
                                <small class="form-text text-muted">This is only for display</small>
                                <div class="invalid-feedback" id="game_form_name_invalid_feedback_@i">
                                    
                                </div>
                            </div>
                            
                            <div class="form-group">
                                <label for="game_form_repo_owner_@i" class="is-required">GitHub Repository</label>
                                <div class="row">
                                    <div class="col">
                                        <select class="custom-select"
                                                id="game_form_repo_owner_@i"
                                                name="RepositoryOwner"
                                                required
                                                asp-items="Model.AvailableRepoOwners">
                                        </select>
                                    </div>
                                    <div class="col">
                                        <input class="form-control" 
                                               type="text" 
                                               id="game_form_repo_name_@i" 
                                               placeholder="Name" 
                                               name="RepositoryName" 
                                               value="@game.RepositoryName" 
                                               required/>
                                               
                                        <div class="valid-feedback" id="game_form_repo_name_valid_feedback_@i">
                                            All good!
                                        </div>
                                    </div>
                                    <div class="col col-auto">
                                        <a class="btn btn-secondary" href="#" onclick="isGameRepositoryValid('game_form_repo_owner_@i', 'game_form_repo_name_@i')">Check</a>
                                    </div>
                                </div>
                            </div>

                            <input class="btn btn-primary" type="submit" value="Update"/>
                        </form>

                    </div>
                </div>
                i++;
            }
        }
        
        <button class="btn btn-secondary btn-block mt-4 mb-3" data-toggle="collapse" data-target="#game_new_collapse">
            Add
        </button>
        
        <div class="collapse pt-2 pb-2" id="game_new_collapse">
            
            <form asp-controller="Game" asp-action="OnPost" class="needs-validation">
                <div class="form-group">
                    <label for="game_new_form_name" class="is-required">Name</label>
                    <input class="form-control" type="text" id="game_new_form_name" placeholder="Name" name="Name"/>
                    <small class="form-text text-muted">This is only for display</small>
                </div>
                                            
                <div class="form-group">
                    <label for="game_new_form_repo_owner" class="is-required">GitHub Repository</label>
                    <div class="row">
                        <div class="col">
                            <select class="custom-select"
                                    id="game_form_repo_owner_@i"
                                    name="RepositoryOwner"
                                    required
                                    asp-items="Model.AvailableRepoOwners">
                            </select>
                        </div>
                        <div class="col">
                            <input class="form-control" type="text" id="game_new_form_repo_name" placeholder="Name" name="RepositoryName"/>
                        </div>
                        <div class="col col-auto">
                            <a class="btn btn-secondary" href="#" onclick="isGameRepositoryValid('game_new_form_repo', 'game_new_form_repo_name')">Check</a>
                        </div>
                    </div>
                </div>
                
                <input class="btn btn-primary" type="submit" value="Create"/>
            </form>
            
        </div>
        
    </div>
</section>

<!-- TODO: Maybe clean this script mess up -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/URI.js/1.19.2/URI.min.js"></script> 
<script>

function isGameRepositoryValid(formOwner, formName) {
    
    let owner = $(`#${formOwner}`).val();
    let name = $(`#${formName}`).val();
    
    fetch(`https://api.github.com/repos/${owner}/${name}`)
    .then(response => {
        alertRepositoryValidity(owner, response.ok);
    });
}

function alertRepositoryValidity(form, isValid) {
    if (isValid) {
       alert("Is valid");
   } else {  
       alert("Is invalid");
    }
}
</script>

<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function() {
  'use strict';
  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Boosted validation styles to
    var forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    var validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === false) {
          event.preventDefault();
          event.stopPropagation();
        }
        form.classList.add('was-validated');
      }, false);
    });
  }, false);
})();
</script>