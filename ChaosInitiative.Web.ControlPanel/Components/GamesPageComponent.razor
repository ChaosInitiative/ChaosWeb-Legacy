@using ChaosInitiative.Web.ControlPanel.Services.Repositories
@using ChaosInitiative.Web.ControlPanel.Model
@using ChaosInitiative.Web.ControlPanel.Services
@using Radzen
@using Radzen.Blazor

@inject DialogService DialogService
@inject GameRepository GameRepository
@inject IGitHubService GitHubService

<section>
    
    <div class="row">
        
        <div class="col">
            <h1>Games</h1>
        </div>
        
        <!-- Toolbar -->
        <div class="col-auto">
            <RadzenButton Click=@(args => DialogService.Open<NewGameDialog>("New Game", null, new ConfirmOptions(){
                                    Width = "1000px", 
                                    Height = "900px", 
                                    ShowClose = true,
                                    ShowTitle = true,
                                    OkButtonText = "Create",
                                    CancelButtonText = "Discard"
                                }))>
                <i class="fas fa-plus"></i>Add
            </RadzenButton>
        </div>

    </div>

    @{
        foreach (Game game in GameRepository.GetAll())
        {
            <RadzenFieldset AllowCollapse="true">
                <HeaderTemplate>
                    <span>
                        @game.Name
                    </span>
                </HeaderTemplate>
                <ChildContent>
                    <RadzenTemplateForm Data="@game" Submit="@((Game g) => SaveGame(g))">
                        <div class="row">
                            <div class="col-4">
                                <p class="label">Game Display Name</p>
                                <RadzenTextBox TValue="string" @bind-Value="@game.Name" Placeholder="Game's Display Name"/>
                            </div>
                            <div class="col col-auto">
                                <p class="label">Game Color</p>
                                <RadzenColorPicker @bind-Value="@game.HexColor" HexText="true" Placeholder="Game Color" ShowColors="true"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-4">
                                <p class="label">Repository Owner</p>
                                <RadzenDropDown TValue="string" Data="@Game.LegalRepositoryOwners" @bind-Value="@game.RepositoryOwner"/>
                            </div>
                            <div class="col-4">
                                <p class="label">Repository Name</p>
                                <RadzenDropDown TValue="string" Data="@GitHubService.GetOrgRepositories(game.RepositoryOwner)" @bind-Value="@game.RepositoryName"/>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-8">
                                <a style="font-size: 1rem" target="_blank" href="@game.GitHubRepositoryUri">@game.GitHubRepositoryUri</a>
                            </div>
                        </div>
                    </RadzenTemplateForm>
                </ChildContent>
            </RadzenFieldset>
        }
    }
    
</section>

@code {

    Game _newGame = new Game();

    async Task AddGame()
    {
        bool success = await GameRepository.Add(_newGame);
        
        
    }

    void SaveGame(Game game)
    {
        
    }

    void ClearGame()
    {
        _newGame = new Game();
    }
    
}