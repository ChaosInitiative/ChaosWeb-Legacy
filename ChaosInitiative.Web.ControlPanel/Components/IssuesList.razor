@using ChaosInitiative.Web.ControlPanel.Services.Repositories
@using ChaosInitiative.Web.ControlPanel.Model

@inject GameRepository GameRepository
@inject IssueRepository IssueRepository

<select class="custom-select">
    @foreach (Game game in GameRepository.GetAll())
    {
        <option value="@game.Name" @onclick="() => { _newGame = game; }">@game.Name</option>
    }
</select>
<div class="row">
    <div class="col-6">
        <ul class="list-group list-group-flush">
            @{
                var task = IssueRepository.GetAllUnassigned(_newGame);
                if (task.IsCompleted)
                {
                    @foreach (Issue issue in task.Result)
                    {
                        <li class="list-group-item">
                            <h4>@issue.</h4>
                            <button class="fas fa-plus" @onclick="() => AddIssue(issue)"></button>
                        </li>
                    }
                }
                else
                {
                    <p>Loading...</p>
                }
            }
            
        </ul>
    </div>
    <div class="col-6">
        <ul class="list-group-flush">
        @{
            foreach (Issue issue in Issues)
            {
                <button @onclick="() => RemoveIssue(issue)"></button>
            }
        }
        </ul>
    </div>
</div>

@foreach (Issue issue in Issues)
{
    <li class="list-group-item d-flex justify-content-between align-items-center">
        @issue.Game.Name
        <span class="badge badge-pill" style="background-color: #@issue.Game.HexColor">@issue.IssueId</span>
    </li>
}


@code {
    [Parameter]
    public IList<Issue> Issues { get; set; }

    Game _newGame;
    Issue _newIssue;

    void AddIssue(Issue issue)
    {
        
    }
    
    void RemoveIssue(Issue issue)
    {
        
    }
    
}