@page
@using ChaosInitiative.Web.Shared
@model FeaturesModel
@{
    ViewData["Title"] = "Features";
}


<div class="bg-primary-alt selection-bg-dark selection-color-primary-alt">
    <div class="container pt-4 pb-2">
        <div class=" pl-md-2 pr-md-2">
            @{
            <h3>
            @Model.Features.Count @Model.Features.DisplayName
            @Model.Bugs.Count @Model.Bugs.DisplayName 
            </h3>
            }
        </div>

        @if (false) // TODO: Integrate features list with backend 
        {
            <a class="btn btn-primary" asp-page="FeaturesList">Full Feature List</a>
        }
        <!--
        <div class="p-2">
            <a class="btn btn-link" href="@Constants.LINK_GITHUB_P2CE_ISSUES">Browse GitHub Issues</a>
        </div>-->
        
    </div>
</div>

<div class="container">
    <partial name="Shared/FeaturesPartials/_FeaturesPartialChaos"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialElements"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialPanorama"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialPlatforms"/>
</div>

<!-- Disabled for now, don't really want to talk about things that might come in the future...
<div class="container text-center">
    <h1>Planned features</h1>
</div>

<div class="container pb-5">
    
    <h3>Puzzlemaker rewrite</h3>
    <p>
        Since we do not have the sources for Portal 2's puzzlemaker, we will have to rewrite the entire thing from scratch.
        When we get to that, P2:CE's puzzlemaker will be designed to be way more powerful and expandable than the original.
    </p>
    
    <h3>Scripting improvements</h3>
    <ul>
        <li>New .NET 5.0-based scripting system, succeeding the more limited VScript system</li>
        <li>Scripts written in C# 9.0</li>
        <li>Hot-reloading of scripts to quickly preview and test changes in-game</li>
    </ul>
    
    <h3>Workshop</h3>
    <p>
        P2:CE's workshop will function in a similar manner to Garry's Mod or Left 4 Dead 2's workshop. Instead of uploading
        individual .bsp files, Portal 2: Community Edition workshop items are entire VPK archives, and can contain models,
        materials, maps, scripts, particles and anything else. In addition, workshop items can declare dependencies on each
        other, allowing you to easily use workshop content in your mod.
    </p>
    <p>
        A workshop item doesn't even have to be a map. You can upload your model and let mappers set a dependency to your item
        on their workshop page. All subscribed assets will be usable in the tools as well. 
    </p>
</div>
-->