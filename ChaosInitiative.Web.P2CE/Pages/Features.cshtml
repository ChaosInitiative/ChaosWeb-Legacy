@page
@using ChaosInitiative.Web.Shared
@model FeaturesModel
@{
    ViewData["Title"] = "Features";
}


<div class="bg-primary-alt selection-bg-dark selection-color-primary-alt">
    <div class="container pt-6 pb-5">
        <div class=" pl-md-7 pr-md-7">
            <div class="row">
                
                <div class="col-md-5 text-right">
                    <h1 class="mb-0">Features</h1>
                    <p class="text-dark">All available right now</p>
                </div>
                <div class="col-md-3 ml-md-5">
                    <h3 class="mb-0 mt-1">
                        Closed Issues
                    </h3>
                    @{
                        foreach (IssuesCache closedIssues in Model.Caches)
                        {
                            <div class="text-dark">
                                <strong>
                                    @closedIssues.DisplayName:
                                </strong>
                                @closedIssues.Count
                            </div>
                        }
                    }
                </div>

            </div>
        </div>

        @if (false) // TODO: Integrate features list with backend 
        {
            <a class="btn btn-primary" asp-page="FeaturesList">Full Feature List</a>
        }
        <!--
        <div class="p-2">
            <a class="btn btn-link" href="@Constants.LINK_GITHUB_P2CE_ISSUES">Browse GitHub Issues</a>
        </div>-->
        
    </div>
</div>

<div class="container">
    <partial name="Shared/FeaturesPartials/_FeaturesPartialCsgo"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialElements"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialWebm"/>
    <partial name="Shared/FeaturesPartials/_FeaturesPartialPlatforms"/>
</div>

<div class="container text-center">
    <h1>Planned features</h1>
</div>

<div class="container pb-5">
    
    <h3>Puzzlemaker rewrite</h3>
    <p>
        Since we do not have the sources for Portal 2's puzzlemaker, we will have to rewrite the entire thing from scratch.
        When we get to that, P2CE's puzzlemaker will be designed to be way more powerful and expandable than the original.
    </p>
    
    <h3>Scripting improvements</h3>
    <ul>
        <li>Additional languages like Python</li>
        <li>Expanded API</li>
        <li>C# hotloading</li>
    </ul>
    
    <h3>Workshop</h3>
    <p>
        P2CE's workshop will work similar to games like Garry's Mod or Left 4 Dead 2. Instead of uploading .bsp files 
        with all additional assets bundled in, Portal 2: Community Edition workshop items are complete source-mods
        that can depend on each other and contain everything from maps, materials and models to scripting and particles.
    </p>
    <p>
        A workshop item doesn't even have to be a map. You can upload your model and let mappers set a dependency to your item on their workshop page. 
        All subscribed assets will be usable in the tools as well. 
    </p>
    
</div>